cmake_minimum_required(VERSION 3.00)
project(DeepForgeToolset)
include (GNUInstallDirs)
find_package(CURL REQUIRED) 
find_package(jsoncpp REQUIRED)
include_directories(${JSONCPP_INCLUDE_DIRS})
include_directories(${CURL_INCLUDE_DIR})
if (WIN32)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build/Windows) 
    message("ðŸ”¥ Copying folder of DLL to build/Windows ...")
    file(COPY ${CMAKE_BINARY_DIR}/DLL/ DESTINATION ${CMAKE_BINARY_DIR}/build/Windows)
    message("âœ… Copying folder of DLL to build/Windows was successfully.")
    message("ðŸ”¥ Copying folder of Scripts to build/Windows ...")
    file(COPY ${CMAKE_BINARY_DIR}/src/Scripts DESTINATION ${CMAKE_BINARY_DIR}/build/Windows)
    message("âœ… Copying folder of Scripts to build/Windows was successfully.")
    message("ðŸ”¥ Copying folder of locale to build/Windows ...")
    file(COPY ${CMAKE_BINARY_DIR}/src/locale DESTINATION ${CMAKE_BINARY_DIR}/build/Windows)
    message("âœ… Copying folder of locale to build/Windows was successfully.")
elseif(APPLE)
    find_package(fmt REQUIRED)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build/MacOS)
    message("ðŸ”¥ Copying folder of Scripts to build/MacOS ...")
    file(COPY ${CMAKE_BINARY_DIR}/src/Scripts DESTINATION ${CMAKE_BINARY_DIR}/build/MacOS)
    message("âœ… Copying folder of Scripts to build/MacOS was successfully.")
    message("ðŸ”¥ Copying folder of locale to build/MacOS ...")
    file(COPY ${CMAKE_BINARY_DIR}/src/locale DESTINATION ${CMAKE_BINARY_DIR}/build/MacOS)
    message("âœ… Copying folder of locale to build/MacOS was successfully.")
elseif(UNIX)
    find_package(fmt REQUIRED)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build/Linux)
    message("ðŸ”¥ Copying folder of Scripts to build/Linux ...")
    file(COPY ${CMAKE_BINARY_DIR}/src/Scripts DESTINATION ${CMAKE_BINARY_DIR}/build/Linux)
    message("âœ… Copying folder of Scripts to build/Linux was successfully.")
    message("ðŸ”¥ Copying folder of locale to build/Linux ...")
    file(COPY ${CMAKE_BINARY_DIR}/src/locale DESTINATION ${CMAKE_BINARY_DIR}/build/Linux)
    message("âœ… Copying folder of locale to build/Linux was successfully.")
endif()
include_directories(include)
include(FetchContent)
FetchContent_Declare(fmt
  GIT_REPOSITORY https://github.com/fmtlib/fmt.git
  GIT_TAG master
)
FetchContent_MakeAvailable(fmt)
set(CMAKE_CXX_STANDARD 20)
# set(CMAKE_CXX_STANDARD_LIBRARIES "-static-libgcc -static-libstdc++ -lfmt -lcurl  ${CMAKE_CXX_STANDARD_LIBRARIES}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++20")
set(CMAKE_EXE_LINKER_FLAGS "-static-libgcc -static-libstdc++ -lfmt -ljsoncpp -lcurl")
set(SOURCE_FILES ${CMAKE_BINARY_DIR}/src/DeepForgeToolset.cpp ${CMAKE_BINARY_DIR}/src/DeepForgeToolset.hpp)
add_executable(DeepForgeToolset ${SOURCE_FILES})
add_compile_options(-W)
target_sources(DeepForgeToolset PRIVATE ${CMAKE_BINARY_DIR}/src/resource.rc)
target_link_libraries(DeepForgeToolset PUBLIC fmt::fmt  ${CMAKE_EXE_LINKER_FLAGS} ${JSONCPP_LIBRARIES} )
message(CMAKE_SYSTEM_NAME)